
# Simple command line function to encrypt directories

encryptdir() {
  if [[ $# -lt 1 || $# -gt 2 ]]; then
    echo "Usage: encryptdir input [output]"
    return
  else
    :
  fi

  if [ -d "$1" ]; then
    dir=$(echo $1 | sed 's:/*$::')
  else
    echo "Directory $1 does not exist."
    return
  fi

  printf "You are about to encrypt the entire $dir directory.\n\nEnter a passphrase to generate a symmetric key: "
  read -s p1
  printf "\nConfirm your passphrase: "
  read -s p2
  
  if [[ $p1 != $p2 ]]; then
    while : ; do
      printf "\nPassphrases must match.\nPassphrase: "
      read -s p1
      printf "\nConfirm: "
      read -s p2 # skip the password dialog box
      [[ $p1 != $p2 ]] || break
    done
  fi
  
  printf "\n\nCompressing directory...\n"
  tar -czvf "$dir.tar.gz" "$dir"
  
  printf "\nEncryption started...\n"
  gpg --passphrase "$p2" --batch -c -v --cipher-algo AES256 --no-symkey-cache "$dir.tar.gz"
  rm "$dir.tar.gz" # rm -rf "$dir"
  
  if [ -f "$dir.tar.gz.gpg" ]; then # encryption successful
    if [[ $# -eq 2 ]]; then # output parameter
      mv "$dir.tar.gz.gpg" "$2"
      printf "\nDirectory $dir has been AES-256 encrypted and written to file $2.\n"
    else
      printf "\nDirectory $dir has been AES-256 encrypted.\n"
    fi
  else
    printf "\nThere was a problem.\n"
  fi
}
